3.1.19 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@has_childrenT:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode
;i;0;	[ :@imported_filename"shared:@options{ o:Sass::Tree::CommentNode:@silenti :@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i;	[ ;@:
@loud0o:Sass::Tree::VariableNode:@guarded"!default;i:
@expro:Sass::Script::String	;"all;i:
@type:identifier;@:
@name" default-transition-property;	[ ;@o;;"!default;i;o:Sass::Script::Number:@numerator_units["s:@original"1s;i;i:@denominator_units[ ;@;" default-transition-duration;	[ ;@o;;"!default;i;o:Sass::Script::Bool;F;i;@;" default-transition-function;	[ ;@o;;"!default;i;o;;F;i;@;"default-transition-delay;	[ ;@o;;"!default;i;o:Sass::Script::List	:@separator:
comma;[o;	;"transform;i;;;@o;	;"transform-origin;i;;;@;i;@;"#transitionable-prefixed-values;	[ ;@o;;i ;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;	[ ;@;0o:Sass::Tree::MixinDefNode;T:
@args[[o:Sass::Script::Variable:@underscored_name"property_1;"property-1;@o;"	;i&;#" default_transition_property;" default-transition-property;@[o;";#"property_2;"property-2;@o;;F;i';@[o;";#"property_3;"property-3;@o;;F;i(;@[o;";#"property_4;"property-4;@o;;F;i);@[o;";#"property_5;"property-5;@o;;F;i*;@[o;";#"property_6;"property-6;@o;;F;i+;@[o;";#"property_7;"property-7;@o;;F;i,;@[o;";#"property_8;"property-8;@o;;F;i-;@[o;";#"property_9;"property-9;@o;;F;i.;@[o;";#"property_10;"property-10;@o;;F;i/;@;i0;"transition-property;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@linei1:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;	i1:@underscored_name"property_1:
@name"property-1;@	;	i1;"type-of;@	:@keywords{ ;	i1;@	0[o:Sass::Tree::VariableNode:@guarded0;	i1:
@expro;
;[o;	;	i1;"property_1;"property-1;@	;	i1;"unquote;@	;{ ;"property-1:@children[ ;@	o;;0;i2;o:Sass::Script::Funcall
;![o;"	;i2;#"property_1;"property-1;@o;"	;i2;#"property_2;"property-2;@o;"	;i2;#"property_3;"property-3;@o;"	;i2;#"property_4;"property-4;@o;"	;i2;#"property_5;"property-5;@o;"	;i2;#"property_6;"property-6;@o;"	;i2;#"property_7;"property-7;@o;"	;i2;#"property_8;"property-8;@o;"	;i2;#"property_9;"property-9;@o;"	;i2;#"property_10;"property-10;@;i2;"compact;@:@keywords{ ;"properties;	[ ;@u;$¼[o:Sass::Script::Variable	:
@linei3:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"-webkit;i3:
@type:identifier;	@	o; 	;i3;"properties;"properties;	@	;i3;"prefixed-for-transition;	@	:@keywords{ ;i3:@prop_syntax:new;[" -webkit-transition-property:@children[ ;	@	u;$¸[o:Sass::Script::Variable	:
@linei4:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"	-moz;i4:
@type:identifier;	@	o; 	;i4;"properties;"properties;	@	;i4;"prefixed-for-transition;	@	:@keywords{ ;i4:@prop_syntax:new;["-moz-transition-property:@children[ ;	@	u;$°[o:Sass::Script::Variable	:
@linei5:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"-o;i5:
@type:identifier;	@	o; 	;i5;"properties;"properties;	@	;i5;"prefixed-for-transition;	@	:@keywords{ ;i5:@prop_syntax:new;["-o-transition-property:@children[ ;	@	o:Sass::Tree::PropNode:
@tabsi ;o;"	;i6;#"properties;"properties;@;i6:@prop_syntax:new;["transition-property;	[ ;@;@o;;i ;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;	[ ;@;0o; ;T;![[o;";#"duration_1;"duration-1;@o;"	;i>;#" default_transition_duration;" default-transition-duration;@[o;";#"duration_2;"duration-2;@o;;F;i?;@[o;";#"duration_3;"duration-3;@o;;F;i@;@[o;";#"duration_4;"duration-4;@o;;F;iA;@[o;";#"duration_5;"duration-5;@o;;F;iB;@[o;";#"duration_6;"duration-6;@o;;F;iC;@[o;";#"duration_7;"duration-7;@o;;F;iD;@[o;";#"duration_8;"duration-8;@o;;F;iE;@[o;";#"duration_9;"duration-9;@o;;F;iF;@[o;";#"duration_10;"duration-10;@o;;F;iG;@;iH;"transition-duration;	[u;$Í[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@lineiI:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;	iI:@underscored_name"duration_1:
@name"duration-1;@	;	iI;"type-of;@	:@keywords{ ;	iI;@	0[o:Sass::Tree::VariableNode:@guarded0;	iI:
@expro;
;[o;	;	iI;"duration_1;"duration-1;@	;	iI;"unquote;@	;{ ;"duration-1:@children[ ;@	o;;0;iJ;o;%
;![o;"	;iJ;#"duration_1;"duration-1;@o;"	;iJ;#"duration_2;"duration-2;@o;"	;iJ;#"duration_3;"duration-3;@o;"	;iJ;#"duration_4;"duration-4;@o;"	;iJ;#"duration_5;"duration-5;@o;"	;iJ;#"duration_6;"duration-6;@o;"	;iJ;#"duration_7;"duration-7;@o;"	;iJ;#"duration_8;"duration-8;@o;"	;iJ;#"duration_9;"duration-9;@o;"	;iJ;#"duration_10;"duration-10;@;iJ;"compact;@;&{ ;"durations;	[ ;@o:Sass::Tree::MixinNode;![o;	;"transition-duration;iK;;;@o;"	;iK;#"durations;"durations;@o;	;"	-moz;iL;;;@o;	;"-webkit;iL;;;@o;	;"-o;iL;;;@o:!Sass::Script::UnaryOperation	:@operator:not;iL:@operando;	;"-ms;iL;;;@;@o;,	;-;.;iL;/o;	;"-khtml;iL;;;@;@o;	;"official;iL;;;@;iM;"experimental;	[ ;@;&{ ;@o;;i ;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;	[ ;@;0o; ;T;![[o;";#"function_1;"function-1;@o;"	;iV;#" default_transition_function;" default-transition-function;@[o;";#"function_2;"function-2;@o;;F;iW;@[o;";#"function_3;"function-3;@o;;F;iX;@[o;";#"function_4;"function-4;@o;;F;iY;@[o;";#"function_5;"function-5;@o;;F;iZ;@[o;";#"function_6;"function-6;@o;;F;i[;@[o;";#"function_7;"function-7;@o;;F;i\;@[o;";#"function_8;"function-8;@o;;F;i];@[o;";#"function_9;"function-9;@o;;F;i^;@[o;";#"function_10;"function-10;@o;;F;i_;@;i`;"transition-timing-function;	[o;;0;ia;o;%
;![o;"	;ia;#"function_1;"function-1;@;ia;"unquote;@;&{ ;"function-1;	[ ;@o;;0;ib;o;%
;![o;"	;ib;#"function_1;"function-1;@o;"	;ib;#"function_2;"function-2;@o;"	;ib;#"function_3;"function-3;@o;"	;ib;#"function_4;"function-4;@o;"	;ib;#"function_5;"function-5;@o;"	;ib;#"function_6;"function-6;@o;"	;ib;#"function_7;"function-7;@o;"	;ib;#"function_8;"function-8;@o;"	;ib;#"function_9;"function-9;@o;"	;ib;#"function_10;"function-10;@;ib;"compact;@;&{ ;"functions;	[ ;@o;+;![o;	;"transition-timing-function;ic;;;@o;"	;ic;#"functions;"functions;@o;	;"	-moz;id;;;@o;	;"-webkit;id;;;@o;	;"-o;id;;;@o;,	;-;.;id;/o;	;"-ms;id;;;@;@o;,	;-;.;id;/o;	;"-khtml;id;;;@;@o;	;"official;id;;;@;ie;"experimental;	[ ;@;&{ ;@o;;i ;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;	[ ;@;0o; ;T;![[o;";#"delay_1;"delay-1;@o;"	;im;#"default_transition_delay;"default-transition-delay;@[o;";#"delay_2;"delay-2;@o;;F;in;@[o;";#"delay_3;"delay-3;@o;;F;io;@[o;";#"delay_4;"delay-4;@o;;F;ip;@[o;";#"delay_5;"delay-5;@o;;F;iq;@[o;";#"delay_6;"delay-6;@o;;F;ir;@[o;";#"delay_7;"delay-7;@o;;F;is;@[o;";#"delay_8;"delay-8;@o;;F;it;@[o;";#"delay_9;"delay-9;@o;;F;iu;@[o;";#"delay_10;"delay-10;@o;;F;iv;@;iw;"transition-delay;	[u;$¾[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@lineix:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;	ix:@underscored_name"delay_1:
@name"delay-1;@	;	ix;"type-of;@	:@keywords{ ;	ix;@	0[o:Sass::Tree::VariableNode:@guarded0;	ix:
@expro;
;[o;	;	ix;"delay_1;"delay-1;@	;	ix;"unquote;@	;{ ;"delay-1:@children[ ;@	o;;0;iy;o;%
;![o;"	;iy;#"delay_1;"delay-1;@o;"	;iy;#"delay_2;"delay-2;@o;"	;iy;#"delay_3;"delay-3;@o;"	;iy;#"delay_4;"delay-4;@o;"	;iy;#"delay_5;"delay-5;@o;"	;iy;#"delay_6;"delay-6;@o;"	;iy;#"delay_7;"delay-7;@o;"	;iy;#"delay_8;"delay-8;@o;"	;iy;#"delay_9;"delay-9;@o;"	;iy;#"delay_10;"delay-10;@;iy;"compact;@;&{ ;"delays;	[ ;@o;+;![o;	;"transition-delay;iz;;;@o;"	;iz;#"delays;"delays;@o;	;"	-moz;i{;;;@o;	;"-webkit;i{;;;@o;	;"-o;i{;;;@o;,	;-;.;i{;/o;	;"-ms;i{;;;@;@o;,	;-;.;i{;/o;	;"-khtml;i{;;;@;@o;	;"official;i{;;;@;i|;"experimental;	[ ;@;&{ ;@o;;i ;["*/* Transition all-in-one shorthand */;i;	[ ;@;0o; ;T;![	[o;";#"property;"property;@o;"	;i};#" default_transition_property;" default-transition-property;@[o;";#"duration;"duration;@o;"	;i~;#" default_transition_duration;" default-transition-duration;@[o;";#"function;"function;@o;"	;i;#" default_transition_function;" default-transition-function;@[o;";#"
delay;"
delay;@o;"	;i;#"default_transition_delay;"default-transition-delay;@;i;"single-transition;	[o;+;![o;%
;![o;	;:
space;[	o;"	;i;#"property;"property;@o;"	;i;#"duration;"duration;@o;"	;i;#"function;"function;@o;"	;i;#"
delay;"
delay;@;i;@;i;"compact;@;&{ ;i;"transition;	[ ;@;&{ ;@o; ;T;![[o;";#"transition_1;"transition-1;@o;	;"default;i;;;@[o;";#"transition_2;"transition-2;@o;;F;i;@[o;";#"transition_3;"transition-3;@o;;F;i;@[o;";#"transition_4;"transition-4;@o;;F;i;@[o;";#"transition_5;"transition-5;@o;;F;i;@[o;";#"transition_6;"transition-6;@o;;F;i;@[o;";#"transition_7;"transition-7;@o;;F;i;@[o;";#"transition_8;"transition-8;@o;;F;i;@[o;";#"transition_9;"transition-9;@o;;F;i;@[o;";#"transition_10;"transition-10;@o;;F;i;@;i;"transition;	[u;$î[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"default:
@linei:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Variable	;	i:@underscored_name"transition_1:
@name"transition-1;@	;	i;@	0[o:Sass::Tree::VariableNode:@guarded0;	i:
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::List	:@separator:
space;[	o;	;	i;" default_transition_property;" default-transition-property;@	o;	;	i;" default_transition_duration;" default-transition-duration;@	o;	;	i;" default_transition_function;" default-transition-function;@	o;	;	i;"default_transition_delay;"default-transition-delay;@	;	i;@	;	i;"compact;@	:@keywords{ ;"transition-1:@children[ ;@	o;;0;i;o;;F;i;@;"transitions;	[ ;@u;$g[o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:@value"	list:
@linei:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o;
;[o:Sass::Script::Variable	;	i:@underscored_name"transition_1:
@name"transition-1;@
o:Sass::Script::Number:@numerator_units[ :@original"1;i;	i:@denominator_units[ ;@
;	i;"nth;@
:@keywords{ ;	i;"type-of;@
;{ ;	i;@
;:and;o; 
;o;	;"	list;	i;
;;@
;;;o;
;[o;	;	i;"transition_1;"transition-1;@
;	i;"type-of;@
;{ ;	i;@
;	i;@
u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:
@linei:
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;i:@underscored_name"transition_1:
@name"transition-1:@options{ o;	;i;"transition_2;"transition-2;@o;	;i;"transition_3;"transition-3;@o;	;i;"transition_4;"transition-4;@o;	;i;"transition_5;"transition-5;@o;	;i;"transition_6;"transition-6;@o;	;i;"transition_7;"transition-7;@o;	;i;"transition_8;"transition-8;@o;	;i;"transition_9;"transition-9;@o;	;i;"transition_10;"transition-10;@;i;"compact;@:@keywords{ ;"transitions:@children[ ;@[o:Sass::Tree::VariableNode:@guarded0;	i:
@expro;
;[o;	;	i;"transition_1;"transition-1;@
o;
;[o;	;	i;"transition_2;"transition-2;@
o;	;	i;"transition_3;"transition-3;@
o;	;	i;"transition_4;"transition-4;@
o;	;	i;"transition_5;"transition-5;@
o;	;	i;"transition_6;"transition-6;@
o;	;	i;"transition_7;"transition-7;@
o;	;	i;"transition_8;"transition-8;@
o;	;	i;"transition_9;"transition-9;@
o;	;	i;"transition_10;"transition-10;@
;	i;"compact;@
;{ o;	;"
comma;	i;
;;@
;	i;"	join;@
;{ ;"transitions:@children[ ;@
o;;0;i;o;%
;![ ;i;"comma-list;@;&{ ;"delays;	[ ;@o;;0;i;o;;F;i;@;"has-delays;	[ ;@o;;0;i;o;%
;![ ;i;"comma-list;@;&{ ;"webkit-value;	[ ;@o;;0;i;o;%
;![ ;i;"comma-list;@;&{ ;"moz-value;	[ ;@o;;0;i;o;%
;![ ;i;"comma-list;@;&{ ;"o-value;	[ ;@o;;i ;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;	[ ;@;0o:Sass::Tree::EachNode;T:	@var"transition:
@listo;"	;i¢;#"transitions;"transitions;@;i¢;	[o;;i ;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;	[ ;@;0o;;0;i¥;o;%
;![o;"	;i¥;#"transition;"transition;@o;;[ ;"1;i;i¥;[ ;@;i¥;"nth;@;&{ ;"property;	[ ;@o;;0;i¦;o;;F;i¦;@;"duration;	[ ;@o;;0;i§;o;;F;i§;@;"timing-function;	[ ;@o;;0;i¨;o;;F;i¨;@;"
delay;	[ ;@u;$
[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"1:@valuei:
@linei©:@denominator_units[ :@options{ :@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;i©:@underscored_name"transition:
@name"transition;@;i©;"length;@:@keywords{ ;i©;@0[o:Sass::Tree::VariableNode:@guarded0;i©:
@expro;
;[o;	;i©;"transition;"transition;@o;;[ ;	"2;
i;i©;@
;@;i©;"nth;@;{ ;"duration:@children[ ;@u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"2:@valuei:
@lineiª:@denominator_units[ :@options{ :@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;iª:@underscored_name"transition:
@name"transition;@;iª;"length;@:@keywords{ ;iª;@0[o:Sass::Tree::VariableNode:@guarded0;iª:
@expro;
;[o;	;iª;"transition;"transition;@o;;[ ;	"3;
i;iª;@
;@;iª;"nth;@;{ ;"timing-function:@children[ ;@u;$M[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"3:@valuei:
@linei«:@denominator_units[ :@options{ :@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;i«:@underscored_name"transition:
@name"transition;@;i«;"length;@:@keywords{ ;i«;@0[o:Sass::Tree::VariableNode:@guarded0;i«:
@expro;
;[o;	;i«;"transition;"transition;@o;;[ ;	"4;
i	;i«;@
;@;i«;"nth;@;{ ;"
delay:@children[ ;@o;;0;i«;o:Sass::Script::Bool;
T;i«;@;"has-delays;[ ;@o;;i ;[";/* If a delay is provided without a timing function */;i­;	[ ;@;0u;$^[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:@operator:not:
@linei®:@operando:Sass::Script::Variable	;
i®:@underscored_name"
delay:
@name"
delay:@options{ ;@;:and:@operand1o:Sass::Script::Funcall
:
@args[o;	;
i®;"timing_function;"timing-function;@;
i®;"is-time;@:@keywords{ ;
i®;@0[o:Sass::Tree::VariableNode:@guarded0;
i®:
@expro;	;
i®;"timing_function;"timing-function;@;"
delay:@children[ ;@o;;0;
i®;o:Sass::Script::Bool:@valueF;
i®;@;"timing-function;[ ;@o;;0;
i®;o;;T;
i®;@;"has-delays;[ ;@o;;i ;["9/* Keep a list of delays in case one is specified */;i°;	[ ;@;0o;;0;i±;o;%
;![o;"	;i±;#"delays;"delays;@o;%
;![o;"	;i±;#"
delay;"
delay;@o;"	;i±;#"
delay;"
delay;@o;;["s;"0s;i ;i±;[ ;@;i±;"if;@;&{ ;i±;"append;@;&{ ;"delays;	[ ;@o;;0;i³;o;%
;![o;"	;i³;#"webkit_value;"webkit-value;@o;%
;![o;	;;0;[o;%
;![o;	;"-webkit;i³;;;@o;"	;i³;#"property;"property;@;i³;"prefixed-for-transition;@;&{ o;"	;i³;#"duration;"duration;@o;"	;i³;#"timing_function;"timing-function;@;i³;@;i³;"compact;@;&{ ;i³;"append;@;&{ ;"webkit-value;	[ ;@o;;0;i´;o;%
;![o;"	;i´;#"moz_value;"moz-value;@o;%
;![o;	;;0;[	o;%
;![o;	;"	-moz;i´;;;@o;"	;i´;#"property;"property;@;i´;"prefixed-for-transition;@;&{ o;"	;i´;#"duration;"duration;@o;"	;i´;#"timing_function;"timing-function;@o;"	;i´;#"
delay;"
delay;@;i´;@;i´;"compact;@;&{ ;i´;"append;@;&{ ;"moz-value;	[ ;@o;;0;iµ;o;%
;![o;"	;iµ;#"o_value;"o-value;@o;%
;![o;	;;0;[	o;%
;![o;	;"-o;iµ;;;@o;"	;iµ;#"property;"property;@;iµ;"prefixed-for-transition;@;&{ o;"	;iµ;#"duration;"duration;@o;"	;iµ;#"timing_function;"timing-function;@o;"	;iµ;#"
delay;"
delay;@;iµ;@;iµ;"compact;@;&{ ;iµ;"append;@;&{ ;"o-value;	[ ;@;@u;$á[o:Sass::Script::Variable	:
@linei¸:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;i¸;"webkit_value;"webkit-value;	@	;i¸:@prop_syntax:new;["-webkit-transition:@children[ ;	@	o:Sass::Tree::CommentNode:@silenti ;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹;[ ;	@	:
@loud0u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:@underscored_name"has_delays:
@name"has-delays:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;iº;"delays;"delays;	@	;iº:@prop_syntax:new;["-webkit-transition-delay:@children[ ;	@	u;$#[o:Sass::Script::Variable	:
@linei»:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;i»;"moz_value;"moz-value;	@	;i»:@prop_syntax:new;["-moz-transition:@children[ ;	@	u;$[o:Sass::Script::Variable	:
@linei¼:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;i¼;"o_value;"o-value;	@	;i¼:@prop_syntax:new;["-o-transition:@children[ ;	@	o;';(i ;o;"	;i½;#"transitions;"transitions;@;i½;);*;["transition;	[ ;@;@o;;i ;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;	[ ;@;0o:Sass::Tree::FunctionNode;T;![[o;";#"	list;"	list;@o;	;;0;[ ;iÁ;@;iÁ;"comma-list;	[o:Sass::Tree::ReturnNode	;iÂ;o;%
;![o;	;;0;[ ;iÂ;@o;"	;iÂ;#"	list;"	list;@o;	;"
comma;iÂ;;;@;iÂ;"	join;@;&{ ;	[ ;@;@o;;i ;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;	[ ;@;0o;4;T;![[o;";#"prefix;"prefix;@0[o;";#"property;"property;@0;iÆ;"prefixed-for-transition;	[u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"	list:
@lineiÇ:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;	iÇ:@underscored_name"property:
@name"property;@	;	iÇ;"type-of;@	:@keywords{ ;	iÇ;@	u:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@lineiÎ:@underscored_name"#transitionable_prefixed_values:
@name"#transitionable-prefixed-values:@options{ o;	;iÎ;	"property;
"property;@;iÎ;
"
index;@:@keywords{ u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:
@expro:Sass::Script::Variable	;iÑ:@underscored_name"property:
@name"property:@options{ :@children[ ;@[o:Sass::Tree::ReturnNode	;iÏ:
@expro: Sass::Script::Interpolation:	@mido;	;iÏ;	"prefix;
"prefix;@:@whitespace_after0:@before0;iÏ:@whitespace_beforei:@aftero;;o;	;iÏ;	"property;
"property;@;0;o;;o:Sass::Script::String	:@value"-;iÏ:
@type:identifier;@;F;0;iÏ;0;0;@:@originally_text:originally_text;iÏ;0;0;@;F;@;F:@children[ ;@[o:Sass::Tree::VariableNode:@guarded0;	iÈ:
@expro;
;[ ;	iÈ;"comma-list;@	;{ ;"new-list:@children[ ;@	o:Sass::Tree::EachNode:@has_childrenT:	@var"v:
@listo;	;	iÉ;"property;"property;@	;	iÉ;[o;;0;	iÊ;o;
;[o;	;	iÊ;"new_list;"new-list;@	o;
;[o;	;	iÊ;"prefix;"prefix;@	o;	;	iÊ;"v;"v;@	;	iÊ;"prefixed-for-transition;@	;{ ;	iÊ;"append;@	;{ ;"new-list;[ ;@	;@	o:Sass::Tree::ReturnNode	;	iÌ;o;	;	iÌ;"new_list;"new-list;@	;[ ;@	;@o;;i ;["7/* Checks if the value given is a unit of time. */;iÖ;	[ ;@;0o;4;T;![[o;";#"
value;"
value;@0;i×;"is-time;	[u;$ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"number:
@lineiØ:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;	iØ:@underscored_name"
value:
@name"
value;@	;	iØ;"type-of;@	:@keywords{ ;	iØ;@	u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:
@expro:Sass::Script::Bool:@valueF;iÛ:@options{ :@children[ ;
@	[o:Sass::Tree::ReturnNode	;	iÙ:
@expro:!Sass::Script::UnaryOperation	;:not;	iÙ:@operando;	;;;	iÙ;o;
;[o:Sass::Script::List	:@separator:
space;[o;	;"s;	iÙ;
;;@	o;	;"ms;	iÙ;
;;@	;	iÙ;@	o;
;[o;	;	iÙ;"
value;"
value;@	;	iÙ;"	unit;@	;{ ;	iÙ;"
index;@	;{ ;@	;@	:@children[ ;@	;@;@